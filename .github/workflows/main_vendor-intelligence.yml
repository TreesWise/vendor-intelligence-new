name: Build and deploy Python app to Azure Web App - Vendor-Intelligence

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Create .env file
        run: |
          echo "API_TOKEN=${{ secrets.API_TOKEN }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "WAREHOUSE_ID=${{ secrets.WAREHOUSE_ID }}" >> .env

      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r -x "venv/*"  # Ensure .env is included by excluding venv folder only

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Vendor-Intelligence'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      - name: Set up virtual environment in deploy job
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies in deploy job
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Ensure .env file is loaded
        run: |
          echo "Verifying .env file..."
          cat .env

      - name: Start app with .env variables
        run: |
          source venv/bin/activate
          echo "Starting the app with .env variables..."
